@model BM4.Models.SubLocationType

@{
    ViewBag.Title = "Create New Sub Location";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //Layout = null;
    List<String> Errors = ViewBag.Errors != null ? ViewBag.Errors : new List<string>();
}

<div class="section full mb-2">
    <div class="wide-block pb-1 pt-1">
        <div class="w3-container w3-padding">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                @Html.Raw(string.Join("<br/>", Errors))

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @*<div class="form-group basic">
                    <div class="input-wrapper">
                        @Html.LabelFor(model => model.CitySearchbox, htmlAttributes: new { @class = "" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CitySearchbox, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CitySearchbox, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@
                <div class="form-group basic">
                    <div class="input-wrapper">
                        @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CityId, (SelectList)ViewData["City"], "--Select--", new { @class = "form-control", onchange = "LoadLocations()" })
                            @*@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group basic">
                    <div class="input-wrapper">
                        @Html.LabelFor(model => model.LocationTypeId)
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.LocationTypeId , new List<SelectListItem>
                {
                           new SelectListItem{ Text="---Select---", Value = "-1"},
                   new SelectListItem{ Text="School", Value = "1"},
                   new SelectListItem{ Text="Higher School", Value = "2" },
                   new SelectListItem{ Text="College", Value = "3" },
                   new SelectListItem{ Text="Post-Graduation", Value = "4" },
                   new SelectListItem{ Text="Job", Value = "5" },
                   new SelectListItem{ Text="Tuition Classes", Value = "6" },
                   new SelectListItem{ Text="Coaching Classes", Value = "7" },
                   new SelectListItem{ Text="Computer Classes", Value = "8" }
                }, new { @class = "form-control", onchange = "LoadLocations()" })
                        </div>
                    </div>
                </div>

                <div class="form-group basic">
                    <div class="input-wrapper">
                        <label id="locationSubTypeLabel"></label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.LocationSubType, (SelectList)ViewData["LocationSubTypes"], "--Select--", new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <section style="display:none" class="sectionBlock school">
                    <div class="form-group basic">
                        <div class="input-wrapper">
                            @Html.LabelFor(model => model.Standard)
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Standard, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Standard, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </section>
                <section style="display:none" class="sectionBlock college">
                    <div class="form-group basic">
                        <div class="input-wrapper">
                            @Html.LabelFor(model => model.SemesterYear)
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SemesterYear, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SemesterYear, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </section>
                <section style="display:none" class="sectionBlock company">
                    <div class="form-group basic">
                        <div class="input-wrapper">
                            @Html.LabelFor(model => model.Department)
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </section>
                <section style="display:none" class="sectionBlock classes">
                    <div class="form-group basic">
                        <div class="input-wrapper">
                            @Html.LabelFor(model => model.Batches)
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Batches, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Batches, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </section>

                <Script>

                </Script>

                <div class="form-group basic">
                    <div class="input-wrapper">
                        <div class="col-md-offset-2 col-md-10">
                            <input id="btnSubmit" style="display:none" type="submit" value="Create" class="btn btn-primary btn-block" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section scripts {
    <script>

        $(document).ready(function () {
            $('#LocationSubType').hide();
            if ($('#LocationTypeId :Selected').val() != '-1')
                $('#LocationTypeId').change();
        });

        function LoadLocations() {
            ChangeCategory(false);
            if ($('#CityId').val().length > 0 && $('#LocationTypeId').val() != "-1") {
                $.ajax({
                    type: "post",
                    url: "/Home/GetLocations",
                    data: { CityName: $('#CityId').val(), LocationTypeId: $('#LocationTypeId').val() },
                    datatype: "json",
                    traditional: true,
                    success: function (data) {
                        var loc = "<select id='LocationId'>";
                        loc = loc + '<option value="">--Select--</option>';
                        
                        for (var i = 0; i < data.length; i++) {
                            loc = loc + '<option value=' + data[i].MainLocationId + '>' + data[i].Text2 + ', ' + data[i].Text3 + '</option>';
                        }
                        loc = loc + '</select>';
                        $('#LocationSubType').html(loc);
                        var selectedLocationId = '@(Model != null ? Model.SubLocationId.ToString() : "")';
                        $('#LocationSubType').val(selectedLocationId);
                        if (data.length > 0) {
                            $('#locationSubTypeLabel').html('Select From ' + data.length + ' ' + $('#LocationTypeId :Selected').text());
                            $('#LocationSubType').show();
                            ChangeCategory(true);
                        }
                        else {
                            $('#locationSubTypeLabel').html('Create New ' + '<a href="/Home/LocationType">' + $('#LocationTypeId :Selected').text() + '</a> in ' + $('#CityId').val());
                            $('#LocationSubType').hide();
                            ChangeCategory(false);
                        }
                    }
                });
            }
        }

        function ChangeCategory(hasValues) {
            var selectedLocation = $('#LocationTypeId :Selected').val();

            $('.sectionBlock').hide();
            $('#btnSubmit').hide();
            if (hasValues) {
                if (selectedLocation == "1" || selectedLocation == "2") {
                    $('.sectionBlock.school').show();
                    $('#btnSubmit').show();
                }
                else if (selectedLocation == "3" || selectedLocation == "4") {
                    $('.sectionBlock.college').show();
                    $('#btnSubmit').show();
                }
                else if (selectedLocation == "5") {
                    $('.sectionBlock.company').show();
                    $('#btnSubmit').show();
                }
                else if (selectedLocation == "6" || selectedLocation == "7" || selectedLocation == "8") {
                    $('.sectionBlock.classes').show();
                    $('#btnSubmit').show();
                }
                //$('#locationSubTypeLabel').html('Select ' + $('#LocationTypeId :Selected').text());
            }
        }

    </script>
}