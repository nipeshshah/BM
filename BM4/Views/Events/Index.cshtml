@model BM4.Models.UserEvent

@{
                /**/

                ViewBag.Title = "Create new Event";
                Layout = "~/Views/Shared/_Layout.cshtml";
}


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#StartingDate").datepicker({
                dateFormat: "MM yy",
                changeMonth: true,
                changeYear: true
            });
            $("#EndingDate").datepicker({
                dateFormat: "MM yy",
                changeMonth: true,
                changeYear: true
            });

            if (getParameterByName('Start') != null && getParameterByName('Start') != undefined) {
                $('#StartingDate').datepicker().datepicker('setDate', new Date(getParameterByName('Start')))
            }
            if (getParameterByName('End') != null && getParameterByName('End') != undefined) {
                $('#EndingDate').datepicker().datepicker('setDate', new Date(getParameterByName('End')))
            }

            $('#CityId').change(function () {
                $.ajax({
                    type: "post",
                    url: "/Events/GetLocations",
                    data: { cityName: $('#CityId :Selected').val() },
                    datatype: "json",
                    traditional: true,
                    success: function (data) {
                        debugger;
                        var loc = "<select id='LocationId'>";
                        loc = loc + '<option value="">--Select--</option>';
                        for (var i = 0; i < data.length; i++) {
                            loc = loc + '<option value=' + data[i].MainLocationId + '>' + data[i].Text2 + (data[i].Text3 != null ? ', ' + data[i].Text3 : "") + ', ' +  data[i].Text4 + '</option>';
                        }
                        loc = loc + '</select>';
                        $('#LocationId').html(loc);
                        var selectedLocationId = '@(Model != null ? Model.LocationId.ToString() : "")';
                        $('#LocationId').val(selectedLocationId);
                    }
                });
            });

            $('#LocationId').change(function () {
                $.ajax({
                    type: "post",
                    url: "/Events/GetSubLocations",
                    data: { cityName: $('#CityId :Selected').val(), LocationId: $('#LocationId :Selected').val()},
                    datatype: "json",
                    traditional: true,
                    success: function (data) {
                        var loc = "<select id='Location_MainLocationId'>";
                        loc = loc + '<option value="">--Select--</option>';
                        for (var i = 0; i < data.length; i++) {
                            loc = loc + '<option value=' + data[i].LocationId + '>' + data[i].Text1 + '</option>';
                        }
                        loc = loc + '</select>';
                        $('#Location_MainLocationId').html(loc);
                        var selectedLocationId = '@(Model != null ? Model.LocationId.ToString() : "")';
                        $('#Location_MainLocationId').val(selectedLocationId);
                    }
                });
            });

            if ($('#CityId :Selected').val() != "") {
                $('#CityId').change();
            }
        });

        function getParameterByName(name, url) {
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, '\\$&');
            var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, ' '));
        }
            
    </script>
}


<div class="section full mb-2">
    <div class="wide-block pb-1 pt-1">
        <div class="w3-container w3-padding">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.UserId);

                //@Html.Raw(string.Join("<br/>", ""))

                <div class="form-group basic">
                    <div class="input-wrapper">
                        @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CityId, (SelectList)ViewData["City"], "--Select--", new { @class = "form-control" })
                            @*@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group basic">
                    <div class="input-wrapper">
                        @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.LocationId, (IEnumerable<SelectListItem>)new List<SelectListItem>(), "--Select--", new { @class = "form-control" })
                            @*@Html.DropDownListFor(x => x.LocationNames, new List<SelectListItem>(), "--Select--", new { @id = "ddlDistrict" });*@
                            @*@Html.EditorFor(model => model.LocationId, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group basic">
                    <div class="input-wrapper">
                        @Html.LabelFor(model => model.Location.MainLocationId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Location.MainLocationId, (IEnumerable<SelectListItem>)new List<SelectListItem>(), "--Select--", new { @class = "form-control" })
                            @*@Html.DropDownListFor(x => x.LocationNames, new List<SelectListItem>(), "--Select--", new { @id = "ddlDistrict" });*@
                            @*@Html.EditorFor(model => model.LocationId, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.Location.MainLocationId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group basic">
                    <div class="input-wrapper">
                        @Html.LabelFor(model => model.StartingDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartingDate, new { htmlAttributes = new { @readonly = "true", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartingDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group basic">
                    <div class="input-wrapper">
                        @Html.LabelFor(model => model.EndingDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EndingDate, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.EndingDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group basic">
                    <div class="input-wrapper">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-primary btn-block" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

